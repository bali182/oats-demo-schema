{
  "openapi": "3.0.0",
  "info": {
    "title": "Irregular Parameters",
    "version": "1.0"
  },
  "paths": {
    "/irregular-params/{primitiveIntersection}": {
      "get": {
        "operationId": "irregularParameters",
        "description": "Endpoint for testing query parameters with form serialization",
        "parameters": [
          {
            "name": "multiTypeEnum",
            "in": "query",
            "style": "form",
            "explode": false,
            "required": true,
            "schema": {
              "enum": ["str", 125, 0.13, true]
            }
          },
          {
            "name": "primitiveUnion",
            "in": "header",
            "style": "simple",
            "explode": false,
            "required": true,
            "schema": {
              "oneOf": [{ "type": "string" }, { "type": "number" }, { "type": "boolean" }]
            }
          },
          {
            "name": "primitiveIntersection",
            "in": "path",
            "style": "simple",
            "explode": false,
            "required": true,
            "schema": {
              "allOf": [{ "type": "string" }, { "type": "string", "minLength": 10 }]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response returning all the parameters in an object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["multiTypeEnum", "primitiveUnion", "primitiveIntersection"],
                  "properties": {
                    "multiTypeEnum": {
                      "enum": ["str", 125, 0.13, true]
                    },
                    "primitiveUnion": {
                      "oneOf": [{ "type": "string" }, { "type": "number" }, { "type": "boolean" }]
                    },
                    "primitiveIntersection": {
                      "allOf": [{ "type": "string" }, { "type": "string", "minLength": 10 }]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response on wrong data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": ["message"],
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
