{
  "openapi": "3.0.0",
  "info": {
    "title": "Union Schemas",
    "description": "Named union types without the usage of discriminators",
    "version": "1.0"
  },
  "components": {
    "schemas": {
      "PrimitiveUnionType": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "boolean"
          }
        ]
      },
      "InlineObjectUnionType": {
        "oneOf": [
          {
            "type": "object",
            "required": ["foo"],
            "properties": {
              "foo": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["bar"],
            "properties": {
              "bar": {
                "type": "number"
              }
            }
          }
        ]
      },
      "TopLevelUnionType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/LeafType1"
          },
          {
            "$ref": "#/components/schemas/MidLevelUnionType"
          }
        ]
      },
      "MidLevelUnionType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/LeafType2"
          },
          {
            "$ref": "#/components/schemas/LeafType3"
          }
        ]
      },
      "LeafType1": {
        "type": "object",
        "required": ["type", "foo"],
        "properties": {
          "type": {
            "const": "LeafType1"
          },
          "foo": {
            "type": "string"
          }
        }
      },
      "LeafType2": {
        "type": "object",
        "required": ["type", "bar"],
        "properties": {
          "type": {
            "const": "LeafType2"
          },
          "bar": {
            "type": "string"
          }
        }
      },
      "LeafType3": {
        "type": "object",
        "required": ["type", "foobar"],
        "properties": {
          "type": {
            "const": "LeafType3"
          },
          "foobar": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {}
}
